<h1>Users</h1>
<h3>Create a new user:</h3>
<form onsubmit="createUser(); return false;">
    <div class="form-group">
        <label for="createFName">First Name</label>
        <input type="text" id="createFName" name="createFName" placeholder="First Name" class="form-control" required />
    </div>
    <div class="form-group">
        <label for="createLName">Last Name</label>
        <input type="text" id="createLName" name="createLName" placeholder="Last Name" class="form-control" required />
    </div>
    <button type="submit" class="btn btn-primary">Create User</button>
</form>
<h3>Update an existing user:</h3>
<form onsubmit="updateUser(); return false;">
    <div class="form-group">
        <label for="updateUserID">User ID</label>
        <input type="text" id="updateUserID" name="updateUserID" placeholder="User ID" class="form-control" required />
    </div>
    <div class="form-group">
        <label for="updateFName">First Name</label>
        <input type="text" id="updateFName" name="updateFName" placeholder="First Name" class="form-control" required />
    </div>
    <div class="form-group">
        <label for="updateLName">Last Name</label>
        <input type="text" id="updateLName" name="updateLName" placeholder="Last Name" class="form-control" required />
    </div>
    <button type="submit" class="btn btn-primary">Update User</button>
</form>
<h3>Search for a user:</h3>
<form onsubmit="searchUser(); return false;">
    <div class="form-group">
        <label for="searchUserID">User ID</label>
        <input type="text" id="searchUserID" name="searchUserID" placeholder="User ID" class="form-control" required />
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-sm-6">
                <label for="searchFName">First Name</label>
                <input type="text" id="searchFName" name="searchFName" placeholder="First Name" class="form-control" readonly />
            </div>
            <div class="col-sm-6">
                <label for="searchLName">Last Name</label>
                <input type="text" id="searchLName" name="searchLName" placeholder="Last Name" class="form-control" readonly />
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Get Details</button>
</form>

<script>
    function createUser() {
        const data = {
            firstName: $('#createFName').val(),
            lastName: $('#createLName').val()
        };
        $.ajax({
            url: '/api/bank/user/create',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function (data, textStatus, jqXHR) {
                // Display alert message to indicate successful user creation
                var message = "User created successfully:\n";
                message += "User ID: " + data.userID + "\n"
                message += "First name: " + data.firstName + "\n";
                message += "Last name: " + data.lastName;
                window.alert(message);
            },
            error: function (response) {
                window.alert("Failed to create user: " + response.responseText);
            }
        });
    }

    function updateUser() {
        const data = {
            firstName: $('#updateFName').val(),
            lastName: $('#updateLName').val()
        };
        const id = parseInt($('#updateUserID').val(), 10);
        // Only send the request if the specified ID is a number
        if (!isNaN(id) && id >= 0) {
            $.ajax({
                url: '/api/bank/user/' + id + '/update',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (data, textStatus, jqXHR) {
                    // Display alert message to indicate successful user update
                    var message = "User updated successfully:\n";
                    message += "User ID: " + data.userID + "\n"
                    message += "First name: " + data.firstName + "\n";
                    message += "Last name: " + data.lastName;
                    window.alert(message);
                },
                error: function (response) {
                    window.alert("Failed to update user: " + response.responseText);
                }
            });
        } else {
            window.alert("Failed to update user: Specified ID must be a positive number");
        }
    }

    function searchUser() {
        const id = parseInt($('#searchUserID').val(), 10);
        // Only send the request if the specified ID is a number
        if (!isNaN(id) && id >= 0) {
            $.ajax({
                url: '/api/bank/user/' + id,
                type: 'GET',
                contentType: 'application/json',
                processData: false,
                success: function (data, textStatus, jqXHR) {
                    // Inject user values into text fields
                    $('#searchFName').val(data.firstName);
                    $('#searchLName').val(data.lastName);
                },
                error: function (response) {
                    window.alert("Failed to search for user: " + response.responseText);
                }
            });
        } else {
            window.alert("Failed to search for user: Specified ID must be a positive number");
        }
    }
</script>